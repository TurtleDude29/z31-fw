//DO NOT EDIT MANUALLY, let automation work hard.

// auto-generated by PinoutLogic.java based on ../../../connectors/custom_firmware.yaml
#include "pch.h"

// see comments at declaration in pin_repository.h
const char * getBoardSpecificPinName(brain_pin_e brainPin) {
	switch(brainPin) {
		case Gpio::A6: return "xxxx";
		case Gpio::A8: return "Injector 5 (Aux)";
		case Gpio::A9: return "Injector 6 (Aux)";
		case Gpio::B8: return "Tach (PB8)";
		case Gpio::B9: return "Boost (PB9)";
		case Gpio::C5: return "PPS2 (PC5)";
		case Gpio::C6: return "FlexFuel";
		case Gpio::D10: return "ETB_DIR/StepStep";
		case Gpio::D11: return "ETB_DIS/StepDir";
		case Gpio::D12: return "ETB PWM";
		case Gpio::D14: return "Fan2";
		case Gpio::D15: return "Fan1";
		case Gpio::D3: return "Injector 3 (Aux)";
		case Gpio::D4: return "Ignition 1 (StockCoil)";
		case Gpio::D7: return "Injector 4 (Aux)";
		case Gpio::E0: return "Fuel Pump";
		case Gpio::E1: return "Injector 4 (Stock)";
		case Gpio::E11: return "Clutch";
		case Gpio::E14: return "Extra I/O PE14";
		case Gpio::E15: return "Idle (PE15)";
		case Gpio::E2: return "Injector 5 (Stock)";
		case Gpio::E5: return "NOS (PE5)";
		case Gpio::E7: return "CKP";
		case Gpio::E8: return "CMP";
		case Gpio::G10: return "Injector 2 (Aux)";
		case Gpio::G11: return "Injector 3 (Stock)";
		case Gpio::G12: return "Injector 1 (Stock)";
		case Gpio::G13: return "Injector 2 (Stock)";
		case Gpio::G14: return "Injector 6 (Stock)";
		case Gpio::G3: return "Ignition 1 (Aux)";
		case Gpio::G4: return "Ignition 2 (Aux)";
		case Gpio::G5: return "Ignition 3 (Aux)";
		case Gpio::G6: return "Ignition 4 (Aux)";
		case Gpio::G7: return "Ignition 5 (Aux)";
		case Gpio::G8: return "Ignition 6 (Aux)";
		case Gpio::G9: return "Injector 1 (Aux)";
		default: return nullptr;
	}
	return nullptr;
}
